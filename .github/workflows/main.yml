name: CI
on: [pull_request,push]
env:
  WF_ENV: Avilable to all in the project
jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      JOB_ENV: Avilable for jobs only   
    steps:
        - name: Dumb
          run: |
            echo ${{ contains('hello', 'll' ) }}
            echo ${{ startsWith('pruthvi', 'pr' ) }}
            echo ${{ endsWith('rajput', 'ut' ) }}
            echo ${{ format('hello {0} {1} {2}', 'World', '!', '!') }}
        - name: Checkout
          
          uses: actions/checkout@v3
          
        - uses: actions/setup-node@v3
          with:
            node-version: 16
        - name: Log env veriables
          env:
           STEP_ENV: Log for the steps only
          run: |
            echo "WF_ENV: ${WF_ENV}" 
            echo "JOB_ENV: ${JOB_ENV}"
            echo "STEP_ENV: ${STEP_ENV}"
        - name: Log v2
          run: |
            echo "WF_ENV: ${WF_ENV}" 
            echo "JOB_ENV: ${JOB_ENV}"
            echo "STEP_ENV: ${STEP_ENV}"
        - name: Default env veriables
          run: |
            echo "HOME: ${HOME}"
            echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
            echo "GITHUB_ACTION: ${GITHUB_ACTION}"
            echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
            echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
            echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
            echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
            echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
            echo "GITHUB_SHA: ${GITHUB_SHA}"
            echo "GITHUB_REF: ${GITHUB_REF}"
 
        - name: Test
          run: |
            cd ${GITHUB_WORKSPACE}/Learn-Portal
            pwd
            npm rm -rf node_modules
            npm cache clean --force
            npm install
            npm rebuild
            npm update
            npx cross-env ENV=uat envSpecific=learn testrail=no slackNotification=no emailNotification=no runEnv=local slackNotification=no wdio run ./wdio.conf.js --spec test/Smoke_Suite/SignUp_SmokeTest.js
            
      
        - uses: actions/checkout@v2
          if: always()
        - name: Get Allure history
          uses: actions/checkout@v2
          if: always()
          continue-on-error: true
          with:
              ref: gh-pages
              path: gh-pages
       
        - name: Allure Report action from marketplace
          uses: simple-elf/allure-report-action@master
          if: always()
          #id: allure-report
          with:
                 allure_results: allure-results
                 allure_history: allure-history
                 keep_reports: 10
      
    
          
        - name: Deploy report to Github Pages
          if: always()
          uses: peaceiris/actions-gh-pages@v2
          
          env:
           PERSONAL_TOKEN: ${{ secrets.TOKEN }}
           PUBLISH_BRANCH: gh-pages
           
           PUBLISH_DIR: allure-history
